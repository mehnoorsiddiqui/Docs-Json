{
    "WhiteLabel": false,
    "NavItems": [
        {
            "Text": "Step by Step Tutorial",
            "Link": "$h/__getting_started",
            "SubItems": [
                {
                    "Text": "Introduction",
                    "Link": "$h/__intro",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Install the Package",
                    "Link": "$h/__how_to_install",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Building",
                    "Link": "$h/__how_to_build",
                    "SubItems": [
                        {
                            "Text": "Requirements",
                            "Link": "Requirements",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Verify Successful Installation",
                            "Link": "Verify Successful Installation",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Install Dependencies",
                            "Link": "Install Dependencies",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Installation",
                    "Link": "$h/__how_to_use",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Environments",
                    "Link": "$h/__enviroments",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Initialize the API Client",
                    "Link": "$h/__initializing",
                    "SubItems": [
                        {
                            "Text": "HttpClientOptions",
                            "Link": "HttpClientOptions",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "RetryConfiguration",
                            "Link": "RetryConfiguration",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Authorization",
                    "Link": "$h/__authorize",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Client Credentials Grant",
                    "Link": "$h/__client_credentials_grant",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Authorization Code Grant",
                    "Link": "$h/__authorization_code_grant",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Resource Owner Password Grant",
                    "Link": "$h/__resource_owner_password_grant",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Implicit Grant",
                    "Link": "$h/__implicit_grant",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "Test the SDK",
                    "Link": "$h/__how_to_test",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                },
                {
                    "Text": "API Errors",
                    "Link": "$h/__api_errors",
                    "SubItems": [],
                    "Label": null,
                    "Skip": true,
                    "IsExternal": false
                }
            ],
            "Label": null,
            "Skip": false,
            "IsExternal": false
        },
        {
            "Text": "API Reference",
            "Link": "$h/__api_reference",
            "SubItems": [
                {
                    "Text": "List of APIs",
                    "Link": "$h/__list_of_apis",
                    "SubItems": [],
                    "Label": null,
                    "Skip": false,
                    "IsExternal": false
                },
                {
                    "Text": "Pet",
                    "Link": "$e/pet",
                    "SubItems": [
                        {
                            "Text": "Overview",
                            "Link": "$h/__api_reference/pet/Overview",
                            "SubItems": [],
                            "Label": "endpoint-group-overview",
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Add Pet",
                            "Link": "$e/pet/addPet",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Find Pets by Tags",
                            "Link": "$e/pet/findPetsByTags",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Update Pet With Form",
                            "Link": "$e/pet/updatePetWithForm",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Find Pets by Status",
                            "Link": "$e/pet/findPetsByStatus",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Update Pet",
                            "Link": "$e/pet/updatePet",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Upload File",
                            "Link": "$e/pet/uploadFile",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Get Pet by Id",
                            "Link": "$e/pet/getPetById",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Delete Pet",
                            "Link": "$e/pet/deletePet",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": false,
                    "IsExternal": false
                },
                {
                    "Text": "Store",
                    "Link": "$e/store",
                    "SubItems": [
                        {
                            "Text": "Overview",
                            "Link": "$h/__api_reference/store/Overview",
                            "SubItems": [],
                            "Label": "endpoint-group-overview",
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Get Inventory",
                            "Link": "$e/store/getInventory",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Delete Order",
                            "Link": "$e/store/deleteOrder",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Place Order",
                            "Link": "$e/store/placeOrder",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Get Order by Id",
                            "Link": "$e/store/getOrderById",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": false,
                    "IsExternal": false
                },
                {
                    "Text": "User",
                    "Link": "$e/user",
                    "SubItems": [
                        {
                            "Text": "Overview",
                            "Link": "$h/__api_reference/user/Overview",
                            "SubItems": [],
                            "Label": "endpoint-group-overview",
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Create Users With List Input",
                            "Link": "$e/user/createUsersWithListInput",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Login User",
                            "Link": "$e/user/loginUser",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Get User by Name",
                            "Link": "$e/user/getUserByName",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Create User",
                            "Link": "$e/user/createUser",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Logout User",
                            "Link": "$e/user/logoutUser",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Update User",
                            "Link": "$e/user/updateUser",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Delete User",
                            "Link": "$e/user/deleteUser",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": false,
                    "IsExternal": false
                }
            ],
            "Label": null,
            "Skip": false,
            "IsExternal": false
        },
        {
            "Text": "Model Reference",
            "Link": "$h/__model_reference",
            "SubItems": [
                {
                    "Text": "Structures",
                    "Link": "$h/__model_reference/Structures",
                    "SubItems": [
                        {
                            "Text": "Order",
                            "Link": "$m/Order",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Customer",
                            "Link": "$m/Customer",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Address",
                            "Link": "$m/Address",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Category",
                            "Link": "$m/Category",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "User",
                            "Link": "$m/User",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Tag",
                            "Link": "$m/Tag",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Pet",
                            "Link": "$m/Pet",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Pet Image",
                            "Link": "$m/PetImage",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": false,
                    "IsExternal": false
                },
                {
                    "Text": "Enumerations",
                    "Link": "$h/__model_reference/Enumerations",
                    "SubItems": [
                        {
                            "Text": "Status 1",
                            "Link": "$m/Status1",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Status 2",
                            "Link": "$m/status2",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        },
                        {
                            "Text": "Status",
                            "Link": "$m/Status",
                            "SubItems": [],
                            "Label": null,
                            "Skip": false,
                            "IsExternal": false
                        }
                    ],
                    "Label": null,
                    "Skip": false,
                    "IsExternal": false
                }
            ],
            "Label": null,
            "Skip": false,
            "IsExternal": false
        }
    ],
    "DataModel": {
        "showFullCode": false,
        "skipSslCertVerification": null,
        "config": {
            "api_key": "api_key"
        },
        "environment": null,
        "auth": null,
        "call": {
            "additionalQueryParams": null,
            "additionalFieldParams": null,
            "args": {}
        }
    },
    "DataModelSchema": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
            "showFullCode": {
                "title": "Show Complete File",
                "description": "Show complete file for code, with bootstrap and error handling included.",
                "type": "boolean"
            },
            "config": {
                "id": "Client Configuration",
                "title": "Client Configuration",
                "type": "object",
                "properties": {
                    "api_key": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "required": [
                    "api_key"
                ]
            }
        },
        "required": [
            "showFullCode",
            "config"
        ]
    },
    "ModelSchemas": {
        "Root": {
            "Order": {
                "id": "Order",
                "title": "Order",
                "type": "object",
                "properties": {
                    "id": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                    },
                    "petId": {
                        "example": 198772,
                        "type": "integer",
                        "format": "int64"
                    },
                    "quantity": {
                        "example": 7,
                        "type": "integer",
                        "format": "int32"
                    },
                    "shipDate": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "status": {
                        "$ref": "ModelSchemas#/Root/Status"
                    },
                    "complete": {
                        "type": "boolean"
                    }
                }
            },
            "Customer": {
                "id": "Customer",
                "title": "Customer",
                "type": "object",
                "properties": {
                    "id": {
                        "example": 100000,
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "example": "fehguy",
                        "type": "string"
                    },
                    "address": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "ModelSchemas#/Root/Address"
                        }
                    }
                }
            },
            "Status1": {
                "title": "Status1",
                "description": "pet status in the store",
                "x-enum-elements": [
                    {
                        "name": "available",
                        "description": ""
                    },
                    {
                        "name": "pending",
                        "description": ""
                    },
                    {
                        "name": "sold",
                        "description": ""
                    }
                ],
                "type": "string",
                "enum": [
                    "available",
                    "pending",
                    "sold"
                ]
            },
            "Address": {
                "id": "Address",
                "title": "Address",
                "type": "object",
                "properties": {
                    "street": {
                        "example": "437 Lytton",
                        "type": "string"
                    },
                    "city": {
                        "example": "Palo Alto",
                        "type": "string"
                    },
                    "state": {
                        "example": "CA",
                        "type": "string"
                    },
                    "zip": {
                        "example": "94301",
                        "type": "string"
                    }
                }
            },
            "Category": {
                "id": "Category",
                "title": "Category",
                "type": "object",
                "properties": {
                    "id": {
                        "example": 1,
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "example": "Dogs",
                        "type": "string"
                    }
                }
            },
            "User": {
                "id": "User",
                "title": "User",
                "type": "object",
                "properties": {
                    "id": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                    },
                    "username": {
                        "example": "theUser",
                        "type": "string"
                    },
                    "firstName": {
                        "example": "John",
                        "type": "string"
                    },
                    "lastName": {
                        "example": "James",
                        "type": "string"
                    },
                    "email": {
                        "example": "john@email.com",
                        "type": "string"
                    },
                    "password": {
                        "example": "12345",
                        "type": "string"
                    },
                    "phone": {
                        "example": "12345",
                        "type": "string"
                    },
                    "userStatus": {
                        "description": "User Status",
                        "example": 1,
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "status2": {
                "title": "status2",
                "x-enum-elements": [
                    {
                        "name": "available",
                        "description": ""
                    },
                    {
                        "name": "pending",
                        "description": ""
                    },
                    {
                        "name": "sold",
                        "description": ""
                    }
                ],
                "type": "string",
                "enum": [
                    "available",
                    "pending",
                    "sold"
                ]
            },
            "Tag": {
                "id": "Tag",
                "title": "Tag",
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "Pet": {
                "id": "Pet",
                "title": "Pet",
                "type": "object",
                "properties": {
                    "name": {
                        "example": "doggie",
                        "type": "string"
                    },
                    "photoUrls": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "id": {
                        "example": 10,
                        "type": "integer",
                        "format": "int64"
                    },
                    "category": {
                        "$ref": "ModelSchemas#/Root/Category"
                    },
                    "tags": {
                        "description": "",
                        "type": "array",
                        "items": {
                            "$ref": "ModelSchemas#/Root/Tag"
                        }
                    },
                    "status": {
                        "$ref": "ModelSchemas#/Root/Status1"
                    }
                },
                "required": [
                    "name",
                    "photoUrls"
                ]
            },
            "PetImage": {
                "id": "PetImage",
                "title": "PetImage",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "type": {
                        "type": "string"
                    },
                    "message": {
                        "type": "string"
                    }
                }
            },
            "Status": {
                "title": "Status",
                "description": "Order Status",
                "example": "approved",
                "x-enum-elements": [
                    {
                        "name": "placed",
                        "description": ""
                    },
                    {
                        "name": "approved",
                        "description": ""
                    },
                    {
                        "name": "delivered",
                        "description": ""
                    }
                ],
                "type": "string",
                "enum": [
                    "placed",
                    "approved",
                    "delivered"
                ]
            }
        }
    },
    "PublishedPackage": null,
    "AuthHttpCallTemplate": null,
    "ApiAuthentication": null,
    "PartialTemplates": {
        "string_array": "[{% for this in field %}\n{{indent}}  {% if this != nil %}{% if this != nil %}'{{ this | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% else %}''{% endif %}{% if forloop.last %}\n{{indent}}{% else %},{% endif %}{% endfor %}]",
        "category": "{% assign open_curly = '{' %}{% assign close_curly = '}' %}{{ open_curly }}{% capture constructor_params %}{% endcapture %}{% capture constructor_params %}{% endcapture %}{% if field[\"id\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"id\"] != nil %}id: BigInt({% if field[\"id\"] != nil %}{% if field[\"id\"] <= 999999999999999 %}{{ field[\"id\"] }}{% else %}'{{ field[\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %}){% endif %}{% endcapture %}{% endif %}{% if field[\"name\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"name\"] != nil %}name: {% if field[\"name\"] != nil %}'{{ field[\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% assign constructor_param_array = constructor_params | split: '<#>' %}{% for this in constructor_param_array %}{% if this != nil and this != '' %}{{this}},{% if forloop.last %}\n{{indent}}{% endif %}{% endif %}{% endfor %}{{ close_curly }}",
        "tag_array": "[{% for this in field %}\n{{indent}}  {% if this != nil %}{% capture newIndent %}{{indent}}  {% endcapture %}{% render 'tag', field: this, indent: newIndent, showFullCode: showFullCode %}{% endif %}{% if forloop.last %}\n{{indent}}{% else %},{% endif %}{% endfor %}]",
        "tag": "{% assign open_curly = '{' %}{% assign close_curly = '}' %}{{ open_curly }}{% capture constructor_params %}{% endcapture %}{% capture constructor_params %}{% endcapture %}{% if field[\"id\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"id\"] != nil %}id: BigInt({% if field[\"id\"] != nil %}{% if field[\"id\"] <= 999999999999999 %}{{ field[\"id\"] }}{% else %}'{{ field[\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %}){% endif %}{% endcapture %}{% endif %}{% if field[\"name\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"name\"] != nil %}name: {% if field[\"name\"] != nil %}'{{ field[\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% assign constructor_param_array = constructor_params | split: '<#>' %}{% for this in constructor_param_array %}{% if this != nil and this != '' %}{{this}},{% if forloop.last %}\n{{indent}}{% endif %}{% endif %}{% endfor %}{{ close_curly }}",
        "user_array": "[{% for this in field %}\n{{indent}}  {% if this != nil %}{% capture newIndent %}{{indent}}  {% endcapture %}{% render 'user', field: this, indent: newIndent, showFullCode: showFullCode %}{% endif %}{% if forloop.last %}\n{{indent}}{% else %},{% endif %}{% endfor %}]",
        "user": "{% assign open_curly = '{' %}{% assign close_curly = '}' %}{{ open_curly }}{% capture constructor_params %}{% endcapture %}{% capture constructor_params %}{% endcapture %}{% if field[\"id\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"id\"] != nil %}id: BigInt({% if field[\"id\"] != nil %}{% if field[\"id\"] <= 999999999999999 %}{{ field[\"id\"] }}{% else %}'{{ field[\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %}){% endif %}{% endcapture %}{% endif %}{% if field[\"username\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"username\"] != nil %}username: {% if field[\"username\"] != nil %}'{{ field[\"username\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% if field[\"firstName\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"firstName\"] != nil %}firstName: {% if field[\"firstName\"] != nil %}'{{ field[\"firstName\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% if field[\"lastName\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"lastName\"] != nil %}lastName: {% if field[\"lastName\"] != nil %}'{{ field[\"lastName\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% if field[\"email\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"email\"] != nil %}email: {% if field[\"email\"] != nil %}'{{ field[\"email\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% if field[\"password\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"password\"] != nil %}password: {% if field[\"password\"] != nil %}'{{ field[\"password\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% if field[\"phone\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"phone\"] != nil %}phone: {% if field[\"phone\"] != nil %}'{{ field[\"phone\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% if field[\"userStatus\"] != nil %}{% capture constructor_params %}{{constructor_params}}<#>\n{{indent}}  {% if field[\"userStatus\"] != nil %}userStatus: {% if field[\"userStatus\"] != nil %}{{ field[\"userStatus\"] }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% endif %}{% assign constructor_param_array = constructor_params | split: '<#>' %}{% for this in constructor_param_array %}{% if this != nil and this != '' %}{{this}},{% if forloop.last %}\n{{indent}}{% endif %}{% endif %}{% endfor %}{{ close_curly }}"
    },
    "KnownLinkPrefixes": [
        "page"
    ],
    "Title": "Getting Started with Swagger Petstore - OpenAPI 3.0",
    "Sections": [
        {
            "Title": "Step by Step Tutorial",
            "Nodes": [
                {
                    "Title": "Introduction",
                    "Nodes": [
                        {
                            "Text": "This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about\nSwagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!\nYou can now help us improve the API whether it's by making changes to the definition itself or to the code.\nThat way, with time, we can improve the API in general, and expose some of the new features in OAS3.\n\n",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "_If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_\n\n",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "Some useful links:\n\n",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "- [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)\n- [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)\n\n",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "Find out more about Swagger: [http://swagger.io](http://swagger.io)",
                            "Type": "paragraph"
                        }
                    ],
                    "PlaceholderId": "__intro",
                    "SuggestedLinkText": "Introduction",
                    "SuggestedLink": "$h/__intro",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Install the Package",
                    "Nodes": [],
                    "PlaceholderId": "__how_to_install",
                    "SuggestedLinkText": "Install the Package",
                    "SuggestedLink": "$h/__how_to_install",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Building",
                    "Nodes": [
                        {
                            "Level": 1,
                            "Text": "Requirements",
                            "SuggestedLinkText": "Requirements",
                            "SuggestedLink": "Requirements",
                            "SuggestedLinkLevel": 0,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "heading"
                        },
                        {
                            "Text": "The SDK relies on **Node.js** and **npm** (to resolve dependencies). It also requires **Typescript version 3.9+**. You can download and install Node.js and [npm](https://www.npmjs.com/) from [the official Node.js website](https://nodejs.org/en/download/).",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "> **NOTE:** npm is installed by default when Node.js is installed.",
                            "Type": "paragraph"
                        },
                        {
                            "Level": 1,
                            "Text": "Verify Successful Installation",
                            "SuggestedLinkText": "Verify Successful Installation",
                            "SuggestedLink": "Verify Successful Installation",
                            "SuggestedLinkLevel": 0,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "heading"
                        },
                        {
                            "Text": "Run the following commands in the command prompt or shell of your choice to check if Node.js and npm are successfully installed:",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "* Node.js: `node --version`",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "* npm: `npm --version`",
                            "Type": "paragraph"
                        },
                        {
                            "Url": "/static/images/TS_GENERIC_LIB/file0.svg",
                            "AlterateText": "Version Check",
                            "Type": "image"
                        },
                        {
                            "Level": 1,
                            "Text": "Install Dependencies",
                            "SuggestedLinkText": "Install Dependencies",
                            "SuggestedLink": "Install Dependencies",
                            "SuggestedLinkLevel": 0,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "heading"
                        },
                        {
                            "Text": "- To resolve all dependencies, go to the **SDK root directory** and run the following command with npm:",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "```bash\r\nnpm install\r\n```",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "- This will install all dependencies in the **node_modules** folder.",
                            "Type": "paragraph"
                        },
                        {
                            "Url": "/static/images/TS_GENERIC_LIB/file1.svg",
                            "AlterateText": "Resolve Dependencies",
                            "Type": "image"
                        }
                    ],
                    "PlaceholderId": "__how_to_build",
                    "SuggestedLinkText": "Building",
                    "SuggestedLink": "$h/__how_to_build",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Installation",
                    "Nodes": [
                        {
                            "Text": "The following section explains how to use the generated library in a new project.",
                            "Type": "paragraph"
                        },
                        {
                            "Steps": [
                                {
                                    "Nodes": [
                                        {
                                            "Text": "- Open an IDE/text editor for JavaScript like Visual Studio Code. The basic workflow presented here is also applicable if you prefer using a different editor or IDE.",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Text": "- Click on **File** and select **Open Folder**. Select an empty folder of your project, the folder will become visible in the sidebar on the left.",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Url": "/static/images/TS_GENERIC_LIB/file2.svg",
                                            "AlterateText": "Open Folder",
                                            "Type": "image"
                                        },
                                        {
                                            "Text": "- To initialize the Node project, click on **Terminal** and select **New Terminal**. Execute the following command in the terminal:",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Text": "```bash\r\nnpm init --y\r\n```",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Url": "/static/images/TS_GENERIC_LIB/file3.svg",
                                            "AlterateText": "Initialize the Node Project",
                                            "Type": "image"
                                        }
                                    ],
                                    "Title": "Initialize the Node Project",
                                    "Type": "step"
                                },
                                {
                                    "Nodes": [
                                        {
                                            "Text": "- The created project manages its dependencies using its `package.json` file. In order to add a dependency on the *Swagger Petstore - OpenAPI 3.0Lib* client library, double click on the ``` package.json ``` file in the bar on the left and add the dependency to the package in it.",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Url": "/static/images/TS_GENERIC_LIB/file4.svg",
                                            "AlterateText": "Add SwaggerPetstoreOpenapi30Lib Dependency",
                                            "Type": "image"
                                        },
                                        {
                                            "Text": "- To install the package in the project, run the following command in the terminal:",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Text": "```bash\r\nnpm install\r\n```",
                                            "Type": "paragraph"
                                        },
                                        {
                                            "Url": "/static/images/TS_GENERIC_LIB/file5.svg",
                                            "AlterateText": "Install SwaggerPetstoreOpenapi30Lib Dependency",
                                            "Type": "image"
                                        }
                                    ],
                                    "Title": "Add Dependencies to the Client Library",
                                    "Type": "step"
                                }
                            ],
                            "Type": "steppedguide"
                        }
                    ],
                    "PlaceholderId": "__how_to_use",
                    "SuggestedLinkText": "Installation",
                    "SuggestedLink": "$h/__how_to_use",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Environments",
                    "Nodes": [],
                    "PlaceholderId": "__enviroments",
                    "SuggestedLinkText": "Environments",
                    "SuggestedLink": "$h/__enviroments",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Initialize the API Client",
                    "Nodes": [
                        {
                            "Text": "The following parameters are configurable for the API Client:",
                            "Type": "paragraph"
                        },
                        {
                            "Header": {
                                "Data": [
                                    "Parameter",
                                    "Type",
                                    "Description"
                                ],
                                "Type": "tablerow"
                            },
                            "Rows": [
                                {
                                    "Data": [
                                        "`timeout`",
                                        "`number`",
                                        "Timeout for API calls.<br>*Default*: `0`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`httpClientOptions`",
                                        "`Partial<HttpClientOptions>`",
                                        "Stable configurable http client options."
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`unstableHttpClientOptions`",
                                        "`any`",
                                        "Unstable configurable http client options."
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`apiKey`",
                                        "`string`",
                                        ""
                                    ],
                                    "Type": "tablerow"
                                }
                            ],
                            "Type": "table"
                        },
                        {
                            "Level": 1,
                            "Text": "HttpClientOptions",
                            "SuggestedLinkText": "HttpClientOptions",
                            "SuggestedLink": "HttpClientOptions",
                            "SuggestedLinkLevel": 0,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "heading"
                        },
                        {
                            "Header": {
                                "Data": [
                                    "Parameter",
                                    "Type",
                                    "Description"
                                ],
                                "Type": "tablerow"
                            },
                            "Rows": [
                                {
                                    "Data": [
                                        "`timeout`",
                                        "`number`",
                                        "Timeout in milliseconds."
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`httpAgent`",
                                        "`any`",
                                        "Custom http agent to be used when performing http requests."
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`httpsAgent`",
                                        "`any`",
                                        "Custom https agent to be used when performing http requests."
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`retryConfig`",
                                        "`Partial<RetryConfiguration>`",
                                        "Configurations to retry requests."
                                    ],
                                    "Type": "tablerow"
                                }
                            ],
                            "Type": "table"
                        },
                        {
                            "Level": 1,
                            "Text": "RetryConfiguration",
                            "SuggestedLinkText": "RetryConfiguration",
                            "SuggestedLink": "RetryConfiguration",
                            "SuggestedLinkLevel": 0,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "heading"
                        },
                        {
                            "Header": {
                                "Data": [
                                    "Parameter",
                                    "Type",
                                    "Description"
                                ],
                                "Type": "tablerow"
                            },
                            "Rows": [
                                {
                                    "Data": [
                                        "`maxNumberOfRetries`",
                                        "`number`",
                                        "Maximum number of retries. <br> *Default*: `0`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`retryOnTimeout`",
                                        "`boolean`",
                                        "Whether to retry on request timeout. <br> *Default*: `true`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`retryInterval`",
                                        "`number`",
                                        "Interval before next retry. Used in calculation of wait time for next request in case of failure. <br> *Default*: `1`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`maximumRetryWaitTime`",
                                        "`number`",
                                        "Overall wait time for the requests getting retried. <br> *Default*: `0`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`backoffFactor`",
                                        "`number`",
                                        "Used in calculation of wait time for next request in case of failure. <br> *Default*: `2`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`httpStatusCodesToRetry`",
                                        "`number[]`",
                                        "Http status codes to retry against. <br> *Default*: `[408, 413, 429, 500, 502, 503, 504, 521, 522, 524]`"
                                    ],
                                    "Type": "tablerow"
                                },
                                {
                                    "Data": [
                                        "`httpMethodsToRetry`",
                                        "`HttpMethod[]`",
                                        "Http methods to retry against. <br> *Default*: `['GET', 'PUT']`"
                                    ],
                                    "Type": "tablerow"
                                }
                            ],
                            "Type": "table"
                        },
                        {
                            "Text": "The API client can be initialized as follows:",
                            "Type": "paragraph"
                        },
                        {
                            "Text": "const client = new Client({\n  timeout: 0,\n  apiKey: 'api_key',\r\n});\n",
                            "Language": "ts",
                            "Type": "codeblock"
                        }
                    ],
                    "PlaceholderId": "__initializing",
                    "SuggestedLinkText": "Initialize the API Client",
                    "SuggestedLink": "$h/__initializing",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Authorization",
                    "Nodes": [
                        {
                            "Text": "This API uses `Custom Header Signature`.",
                            "Type": "paragraph"
                        }
                    ],
                    "PlaceholderId": "__authorize",
                    "SuggestedLinkText": "Authorization",
                    "SuggestedLink": "$h/__authorize",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Client Credentials Grant",
                    "Nodes": [],
                    "PlaceholderId": "__client_credentials_grant",
                    "SuggestedLinkText": "Client Credentials Grant",
                    "SuggestedLink": "$h/__client_credentials_grant",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Authorization Code Grant",
                    "Nodes": [],
                    "PlaceholderId": "__authorization_code_grant",
                    "SuggestedLinkText": "Authorization Code Grant",
                    "SuggestedLink": "$h/__authorization_code_grant",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Resource Owner Password Grant",
                    "Nodes": [],
                    "PlaceholderId": "__resource_owner_password_grant",
                    "SuggestedLinkText": "Resource Owner Password Grant",
                    "SuggestedLink": "$h/__resource_owner_password_grant",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Implicit Grant",
                    "Nodes": [],
                    "PlaceholderId": "__implicit_grant",
                    "SuggestedLinkText": "Implicit Grant",
                    "SuggestedLink": "$h/__implicit_grant",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "Test the SDK",
                    "Nodes": [],
                    "PlaceholderId": "__how_to_test",
                    "SuggestedLinkText": "Test the SDK",
                    "SuggestedLink": "$h/__how_to_test",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                },
                {
                    "Title": "API Errors",
                    "Nodes": [],
                    "PlaceholderId": "__api_errors",
                    "SuggestedLinkText": "API Errors",
                    "SuggestedLink": "$h/__api_errors",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": true,
                    "Type": "section"
                }
            ],
            "PlaceholderId": "__getting_started",
            "SuggestedLinkText": "Step by Step Tutorial",
            "SuggestedLink": "$h/__getting_started",
            "SuggestedLinkLevel": 1,
            "LinkLabel": null,
            "HideFromNavigation": false,
            "Type": "section"
        },
        {
            "Title": "API Reference",
            "Nodes": [
                {
                    "Title": "List of APIs",
                    "Nodes": [
                        {
                            "Text": "* [Pet]($e/pet)\n* [Store]($e/store)\n* [User]($e/user)",
                            "Type": "paragraph"
                        }
                    ],
                    "PlaceholderId": null,
                    "SuggestedLinkText": "List of APIs",
                    "SuggestedLink": "$h/__list_of_apis",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": false,
                    "Type": "section"
                },
                {
                    "Title": "Pet",
                    "Nodes": [
                        {
                            "Title": "Overview",
                            "Nodes": [
                                {
                                    "Text": "Everything about your Pets",
                                    "Type": "paragraph"
                                },
                                {
                                    "Text": "Find out more: [http://swagger.io](http://swagger.io)",
                                    "Type": "paragraph"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Overview",
                            "SuggestedLink": "$h/__api_reference/pet/Overview",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": "endpoint-group-overview",
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Add Pet",
                            "Nodes": [
                                {
                                    "Title": "Add Pet",
                                    "Name": "addPet",
                                    "Description": "Add a new pet to the store\n\r\n",
                                    "ReturnType": "Pet",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async addPet(\r\n  name: string,\r\n  photoUrls: string[],\r\n  id?: bigint,\r\n  category?: Category,\r\n  tags?: Tag[],\r\n  status?: Status1Enum,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "-",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "photoUrls",
                                            "GenericName": "photoUrls",
                                            "DataType": "string[]",
                                            "Description": "-",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "category",
                                            "GenericName": "category",
                                            "DataType": "Category | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Category",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "Tag[] | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Tag",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status1Enum | undefined",
                                            "Description": "pet status in the store",
                                            "Required": false,
                                            "LinkTo": "$m/Status1",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Invalid input",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "addPet",
                                        "Index": 0,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "name": "doggie",
                                                "photoUrls": [
                                                    "photoUrls5",
                                                    "photoUrls6",
                                                    "photoUrls7"
                                                ],
                                                "id": 10,
                                                "category": {
                                                    "id": 1,
                                                    "name": "Dogs"
                                                },
                                                "tags": [
                                                    {}
                                                ]
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "example": "doggie",
                                                            "type": "string"
                                                        },
                                                        "photoUrls": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "id": {
                                                            "example": 10,
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "category": {
                                                            "$ref": "ModelSchemas#/Root/Category"
                                                        },
                                                        "tags": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "ModelSchemas#/Root/Tag"
                                                            }
                                                        },
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/Status1"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "photoUrls"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/pet{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %},[\"name\", {% if call[\"args\"][\"name\"] != nil %}{{ call[\"args\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% for this in call[\"args\"][\"photoUrls\"] %},[\"photoUrls[{{ forloop.index0 }}]\", {% if this != nil %}{{ this | json: false }}{% else %}null{% endif %}]{% endfor %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% if call[\"args\"][\"category\"][\"id\"] != nil %},[\"category[id]\", {% if call[\"args\"][\"category\"][\"id\"] != nil %}{{ call[\"args\"][\"category\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"][\"name\"] != nil %},[\"category[name]\", {% if call[\"args\"][\"category\"][\"name\"] != nil %}{{ call[\"args\"][\"category\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% for this in call[\"args\"][\"tags\"] %}{% assign a0 = forloop.index0 %}{% if this[\"id\"] != nil %},[\"tags[{{ a0 }}][id]\", {% if this[\"id\"] != nil %}{{ this[\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if this[\"name\"] != nil %},[\"tags[{{ a0 }}][name]\", {% if this[\"name\"] != nil %}{{ this[\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endfor %}{% endif %}{% if call[\"args\"][\"status\"] != nil %},[\"status\", {% if call[\"args\"][\"status\"] != nil %}{{ call[\"args\"][\"status\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'category' %}{% if variable %}{% capture import_params %}{{import_params}},Category{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},Status1Enum{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'tags' %}{% if variable %}{% capture import_params %}{{import_params}},Tag{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}const photoUrls: string[] = {% render 'string_array', field: call[\"args\"][\"photoUrls\"], indent: '', showFullCode: showFullCode %};\n\n{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"category\"] != nil %}const category: Category = {% render 'category', field: call[\"args\"][\"category\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"tags\"] != nil %}const tags: Tag[] = {% render 'tag_array', field: call[\"args\"][\"tags\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'available' %}Status1Enum.Available{% when 'pending' %}Status1Enum.Pending{% when 'sold' %}Status1Enum.Sold{% else %}envrr{% endcase %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.addPet({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name<#>photoUrls{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>category{% endcapture %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>tags{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Add Pet",
                            "SuggestedLink": "$e/pet/addPet",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Find Pets by Tags",
                            "Nodes": [
                                {
                                    "Title": "Find Pets by Tags",
                                    "Name": "findPetsByTags",
                                    "Description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\n\r\n",
                                    "ReturnType": "Pet[]",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async findPetsByTags(\r\n  tags?: string[],\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet[]>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "string[] | undefined",
                                            "Description": "Tags to filter by",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid tag value",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "findPetsByTags",
                                        "Index": 1,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {}
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "tags": {
                                                            "description": "Tags to filter by",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/findByTags{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"tags\"] != nil %}{% for this in call[\"args\"][\"tags\"] %}&tags[{{ forloop.index0 }}]={% if this != nil %}{% capture json_strip_quote_237984 %}{{ this | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endfor %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"tags\"] != nil %}const tags: string[] = {% render 'string_array', field: call[\"args\"][\"tags\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.findPetsByTags({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"tags\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>tags{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Find Pets by Tags",
                            "SuggestedLink": "$e/pet/findPetsByTags",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Update Pet With Form",
                            "Nodes": [
                                {
                                    "Title": "Update Pet With Form",
                                    "Name": "updatePetWithForm",
                                    "Description": "Updates a pet in the store with form data\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async updatePetWithForm(\r\n  petId: bigint,\r\n  name?: string,\r\n  status?: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "ID of pet that needs to be updated",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string | undefined",
                                            "Description": "Name of pet that needs to be updated",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "string | undefined",
                                            "Description": "Status of pet that needs to be updated",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Invalid input",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "updatePetWithForm",
                                        "Index": 4,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "ID of pet that needs to be updated",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "name": {
                                                            "description": "Name of pet that needs to be updated",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "Status of pet that needs to be updated",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"name\"] != nil %}&name={% if call[\"args\"][\"name\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"name\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}&status={% if call[\"args\"][\"status\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"status\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% if call[\"args\"][\"status\"] != nil %}'{{ call[\"args\"][\"status\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.updatePetWithForm({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% if call[\"args\"][\"name\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>name{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Update Pet With Form",
                            "SuggestedLink": "$e/pet/updatePetWithForm",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Find Pets by Status",
                            "Nodes": [
                                {
                                    "Title": "Find Pets by Status",
                                    "Name": "findPetsByStatus",
                                    "Description": "Multiple status values can be provided with comma separated strings\n\r\n",
                                    "ReturnType": "Pet[]",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async findPetsByStatus(\r\n  status?: Status2Enum,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet[]>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status2Enum | undefined",
                                            "Description": "Status values that need to be considered for filter<br>**Default**: `Status2Enum.Available`",
                                            "Required": false,
                                            "LinkTo": "$m/status2",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid status value",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "findPetsByStatus",
                                        "Index": 7,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "status": "available"
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/status2"
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/findByStatus{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"status\"] != nil %}&status={% if call[\"args\"][\"status\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"status\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},Status2Enum{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'available' %}Status2Enum.Available{% when 'pending' %}Status2Enum.Pending{% when 'sold' %}Status2Enum.Sold{% else %}envrr{% endcase %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.findPetsByStatus({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Find Pets by Status",
                            "SuggestedLink": "$e/pet/findPetsByStatus",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Update Pet",
                            "Nodes": [
                                {
                                    "Title": "Update Pet",
                                    "Name": "updatePet",
                                    "Description": "Update an existing pet by Id\n\r\n",
                                    "ReturnType": "Pet",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async updatePet(\r\n  name: string,\r\n  photoUrls: string[],\r\n  id?: bigint,\r\n  category?: Category,\r\n  tags?: Tag[],\r\n  status?: Status1Enum,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "-",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "photoUrls",
                                            "GenericName": "photoUrls",
                                            "DataType": "string[]",
                                            "Description": "-",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "category",
                                            "GenericName": "category",
                                            "DataType": "Category | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Category",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "Tag[] | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Tag",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status1Enum | undefined",
                                            "Description": "pet status in the store",
                                            "Required": false,
                                            "LinkTo": "$m/Status1",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid ID supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "Pet not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Validation exception",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "updatePet",
                                        "Index": 8,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "name": "doggie",
                                                "photoUrls": [
                                                    "photoUrls5",
                                                    "photoUrls6",
                                                    "photoUrls7"
                                                ],
                                                "id": 10,
                                                "category": {
                                                    "id": 1,
                                                    "name": "Dogs"
                                                },
                                                "tags": [
                                                    {}
                                                ]
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "example": "doggie",
                                                            "type": "string"
                                                        },
                                                        "photoUrls": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "id": {
                                                            "example": 10,
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "category": {
                                                            "$ref": "ModelSchemas#/Root/Category"
                                                        },
                                                        "tags": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "ModelSchemas#/Root/Tag"
                                                            }
                                                        },
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/Status1"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "photoUrls"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"PUT\",\"url\":\"https://petstore3.swagger.io/api/v3/pet{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %},[\"name\", {% if call[\"args\"][\"name\"] != nil %}{{ call[\"args\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% for this in call[\"args\"][\"photoUrls\"] %},[\"photoUrls[{{ forloop.index0 }}]\", {% if this != nil %}{{ this | json: false }}{% else %}null{% endif %}]{% endfor %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% if call[\"args\"][\"category\"][\"id\"] != nil %},[\"category[id]\", {% if call[\"args\"][\"category\"][\"id\"] != nil %}{{ call[\"args\"][\"category\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"][\"name\"] != nil %},[\"category[name]\", {% if call[\"args\"][\"category\"][\"name\"] != nil %}{{ call[\"args\"][\"category\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% for this in call[\"args\"][\"tags\"] %}{% assign a0 = forloop.index0 %}{% if this[\"id\"] != nil %},[\"tags[{{ a0 }}][id]\", {% if this[\"id\"] != nil %}{{ this[\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if this[\"name\"] != nil %},[\"tags[{{ a0 }}][name]\", {% if this[\"name\"] != nil %}{{ this[\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endfor %}{% endif %}{% if call[\"args\"][\"status\"] != nil %},[\"status\", {% if call[\"args\"][\"status\"] != nil %}{{ call[\"args\"][\"status\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'category' %}{% if variable %}{% capture import_params %}{{import_params}},Category{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},Status1Enum{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'tags' %}{% if variable %}{% capture import_params %}{{import_params}},Tag{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}const photoUrls: string[] = {% render 'string_array', field: call[\"args\"][\"photoUrls\"], indent: '', showFullCode: showFullCode %};\n\n{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"category\"] != nil %}const category: Category = {% render 'category', field: call[\"args\"][\"category\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"tags\"] != nil %}const tags: Tag[] = {% render 'tag_array', field: call[\"args\"][\"tags\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'available' %}Status1Enum.Available{% when 'pending' %}Status1Enum.Pending{% when 'sold' %}Status1Enum.Sold{% else %}envrr{% endcase %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.updatePet({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name<#>photoUrls{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>category{% endcapture %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>tags{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Update Pet",
                            "SuggestedLink": "$e/pet/updatePet",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Upload File",
                            "Nodes": [
                                {
                                    "Title": "Upload File",
                                    "Name": "uploadFile",
                                    "Description": "uploads an image\n\r\n",
                                    "ReturnType": "PetImage",
                                    "ReturnTypeLink": "$m/PetImage",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async uploadFile(\r\n  petId: bigint,\r\n  additionalMetadata?: string,\r\n  body?: FileWrapper,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<PetImage>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "ID of pet to update",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "additionalMetadata",
                                            "GenericName": "additionalMetadata",
                                            "DataType": "string | undefined",
                                            "Description": "Additional Metadata",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "body",
                                            "GenericName": "body",
                                            "DataType": "FileWrapper | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "uploadFile",
                                        "Index": 9,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "ID of pet to update",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "additionalMetadata": {
                                                            "description": "Additional Metadata",
                                                            "type": "string"
                                                        },
                                                        "body": {
                                                            "type": "string",
                                                            "format": "data-url"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}/uploadImage{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"additionalMetadata\"] != nil %}&additionalMetadata={% if call[\"args\"][\"additionalMetadata\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"additionalMetadata\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"multipart\",\"data\":[{% capture form_capture_238764 %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}],\"files\":[{% capture files_capture_89065 %}{% if call[\"args\"][\"body\"] != nil %},[\"body\", {% if call[\"args\"][\"body\"] != nil %}{% if call[\"args\"][\"body\"] != nil %}{{ call[\"args\"][\"body\"] | json: false }}{% else %}null{% endif %}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ files_capture_89065 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'body' %}{% if variable %}{% capture import_params %}{{import_params}},FileWrapper{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}{% if call[\"args\"][\"additionalMetadata\"] != nil %}const additionalMetadata = {% if call[\"args\"][\"additionalMetadata\"] != nil %}'{{ call[\"args\"][\"additionalMetadata\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"body\"] != nil %}const body = new FileWrapper(fs.createReadStream({% if call[\"args\"][\"body\"] != nil %}'{{ call[\"args\"][\"body\"] | get_file_from_data_url | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}));\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.uploadFile({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% if call[\"args\"][\"additionalMetadata\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>additionalMetadata{% endcapture %}{% endif %}{% if call[\"args\"][\"body\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>body{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Upload File",
                            "SuggestedLink": "$e/pet/uploadFile",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Get Pet by Id",
                            "Nodes": [
                                {
                                    "Title": "Get Pet by Id",
                                    "Name": "getPetById",
                                    "Description": "Returns a single pet\n\r\n",
                                    "ReturnType": "Pet",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async getPetById(\r\n  petId: bigint,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "ID of pet to return",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid ID supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "Pet not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "getPetById",
                                        "Index": 13,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "ID of pet to return",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.getPetById({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Get Pet by Id",
                            "SuggestedLink": "$e/pet/getPetById",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Delete Pet",
                            "Nodes": [
                                {
                                    "Title": "Delete Pet",
                                    "Name": "deletePet",
                                    "Description": "delete a pet\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async deletePet(\r\n  petId: bigint,\r\n  apiKey?: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "Pet id to delete",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "apiKey",
                                            "GenericName": "api_key",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Header",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid pet value",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "deletePet",
                                        "Index": 14,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "Pet id to delete",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "api_key": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"DELETE\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% if call[\"args\"][\"api_key\"] != nil %},\"api_key\":{{ call[\"args\"][\"api_key\"] | json: false }}{% endif %}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}{% if call[\"args\"][\"api_key\"] != nil %}const apiKey = {% if call[\"args\"][\"api_key\"] != nil %}'{{ call[\"args\"][\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.deletePet({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% if call[\"args\"][\"api_key\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>apiKey{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Delete Pet",
                            "SuggestedLink": "$e/pet/deletePet",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        }
                    ],
                    "PlaceholderId": null,
                    "SuggestedLinkText": "Pet",
                    "SuggestedLink": "$e/pet",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": false,
                    "Type": "section"
                },
                {
                    "Title": "Store",
                    "Nodes": [
                        {
                            "Title": "Overview",
                            "Nodes": [
                                {
                                    "Text": "Access to Petstore orders",
                                    "Type": "paragraph"
                                },
                                {
                                    "Text": "Find out more about our store: [http://swagger.io](http://swagger.io)",
                                    "Type": "paragraph"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Overview",
                            "SuggestedLink": "$h/__api_reference/store/Overview",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": "endpoint-group-overview",
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Get Inventory",
                            "Nodes": [
                                {
                                    "Title": "Get Inventory",
                                    "Name": "getInventory",
                                    "Description": "Returns a map of status codes to quantities\n\r\n",
                                    "ReturnType": "Record<string, number>",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async getInventory(\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Record<string, number>>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "store",
                                        "EndpointName": "getInventory",
                                        "Index": 2,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {}
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/store/inventory{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},StoreController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst storeController = new StoreController(client);\n\r\n{% endif %}try {\r\n  const { result, ...httpResponse } = await storeController.getInventory({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Get Inventory",
                            "SuggestedLink": "$e/store/getInventory",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Delete Order",
                            "Nodes": [
                                {
                                    "Title": "Delete Order",
                                    "Name": "deleteOrder",
                                    "Description": "For valid response try integer IDs with value < 1000. Anything above 1000 or nonintegers will generate API errors\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async deleteOrder(\r\n  orderId: bigint,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "orderId",
                                            "GenericName": "orderId",
                                            "DataType": "bigint",
                                            "Description": "ID of the order that needs to be deleted",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid ID supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "Order not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "store",
                                        "EndpointName": "deleteOrder",
                                        "Index": 5,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "orderId": 62
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "orderId": {
                                                            "description": "ID of the order that needs to be deleted",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        }
                                                    },
                                                    "required": [
                                                        "orderId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"DELETE\",\"url\":\"https://petstore3.swagger.io/api/v3/store/order/{{ call[\"args\"][\"orderId\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},StoreController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst storeController = new StoreController(client);\n\r\n{% endif %}{% if call[\"args\"][\"orderId\"] != nil %}const orderId = BigInt({% if call[\"args\"][\"orderId\"] != nil %}{% if call[\"args\"][\"orderId\"] <= 999999999999999 %}{{ call[\"args\"][\"orderId\"] }}{% else %}'{{ call[\"args\"][\"orderId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const orderId = 0n;\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await storeController.deleteOrder({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}orderId{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Delete Order",
                            "SuggestedLink": "$e/store/deleteOrder",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Place Order",
                            "Nodes": [
                                {
                                    "Title": "Place Order",
                                    "Name": "placeOrder",
                                    "Description": "Place a new order in the store\n\r\n",
                                    "ReturnType": "Order",
                                    "ReturnTypeLink": "$m/Order",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async placeOrder(\r\n  id?: bigint,\r\n  petId?: bigint,\r\n  quantity?: number,\r\n  shipDate?: string,\r\n  status?: StatusEnum,\r\n  complete?: boolean,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Order>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "quantity",
                                            "GenericName": "quantity",
                                            "DataType": "number | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "shipDate",
                                            "GenericName": "shipDate",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "StatusEnum | undefined",
                                            "Description": "Order Status",
                                            "Required": false,
                                            "LinkTo": "$m/Status",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "complete",
                                            "GenericName": "complete",
                                            "DataType": "boolean | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Invalid input",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "store",
                                        "EndpointName": "placeOrder",
                                        "Index": 10,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "id": 10,
                                                "petId": 198772,
                                                "quantity": 7
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "example": 10,
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "petId": {
                                                            "example": 198772,
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "quantity": {
                                                            "example": 7,
                                                            "type": "integer",
                                                            "format": "int32"
                                                        },
                                                        "shipDate": {
                                                            "type": "string",
                                                            "format": "date-time"
                                                        },
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/Status"
                                                        },
                                                        "complete": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/store/order{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"petId\"] != nil %},[\"petId\", {% if call[\"args\"][\"petId\"] != nil %}{{ call[\"args\"][\"petId\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"quantity\"] != nil %},[\"quantity\", {% if call[\"args\"][\"quantity\"] != nil %}{{ call[\"args\"][\"quantity\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"shipDate\"] != nil %},[\"shipDate\", {% if call[\"args\"][\"shipDate\"] != nil %}{{ call[\"args\"][\"shipDate\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"status\"] != nil %},[\"status\", {% if call[\"args\"][\"status\"] != nil %}{{ call[\"args\"][\"status\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"complete\"] != nil %},[\"complete\", {% if call[\"args\"][\"complete\"] != nil %}{{ call[\"args\"][\"complete\"] }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},StatusEnum{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},StoreController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst storeController = new StoreController(client);\n\r\n{% endif %}{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"quantity\"] != nil %}const quantity = {% if call[\"args\"][\"quantity\"] != nil %}{{ call[\"args\"][\"quantity\"] }}{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"shipDate\"] != nil %}const shipDate = {% if call[\"args\"][\"shipDate\"] != nil %}'{{ call[\"args\"][\"shipDate\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'placed' %}StatusEnum.Placed{% when 'approved' %}StatusEnum.Approved{% when 'delivered' %}StatusEnum.Delivered{% else %}envrr{% endcase %};\n\n{% endif %}{% if call[\"args\"][\"complete\"] != nil %}const complete = {% if call[\"args\"][\"complete\"] != nil %}{{ call[\"args\"][\"complete\"] }}{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await storeController.placeOrder({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"petId\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>petId{% endcapture %}{% endif %}{% if call[\"args\"][\"quantity\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>quantity{% endcapture %}{% endif %}{% if call[\"args\"][\"shipDate\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>shipDate{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% if call[\"args\"][\"complete\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>complete{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Place Order",
                            "SuggestedLink": "$e/store/placeOrder",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Get Order by Id",
                            "Nodes": [
                                {
                                    "Title": "Get Order by Id",
                                    "Name": "getOrderById",
                                    "Description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.\n\r\n",
                                    "ReturnType": "Order",
                                    "ReturnTypeLink": "$m/Order",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async getOrderById(\r\n  orderId: bigint,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Order>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "orderId",
                                            "GenericName": "orderId",
                                            "DataType": "bigint",
                                            "Description": "ID of order that needs to be fetched",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid ID supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "Order not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "store",
                                        "EndpointName": "getOrderById",
                                        "Index": 11,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "orderId": 62
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "orderId": {
                                                            "description": "ID of order that needs to be fetched",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        }
                                                    },
                                                    "required": [
                                                        "orderId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/store/order/{{ call[\"args\"][\"orderId\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},StoreController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst storeController = new StoreController(client);\n\r\n{% endif %}{% if call[\"args\"][\"orderId\"] != nil %}const orderId = BigInt({% if call[\"args\"][\"orderId\"] != nil %}{% if call[\"args\"][\"orderId\"] <= 999999999999999 %}{{ call[\"args\"][\"orderId\"] }}{% else %}'{{ call[\"args\"][\"orderId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const orderId = 0n;\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await storeController.getOrderById({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}orderId{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Get Order by Id",
                            "SuggestedLink": "$e/store/getOrderById",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        }
                    ],
                    "PlaceholderId": null,
                    "SuggestedLinkText": "Store",
                    "SuggestedLink": "$e/store",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": false,
                    "Type": "section"
                },
                {
                    "Title": "User",
                    "Nodes": [
                        {
                            "Title": "Overview",
                            "Nodes": [
                                {
                                    "Text": "Operations about user",
                                    "Type": "paragraph"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Overview",
                            "SuggestedLink": "$h/__api_reference/user/Overview",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": "endpoint-group-overview",
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Create Users With List Input",
                            "Nodes": [
                                {
                                    "Title": "Create Users With List Input",
                                    "Name": "createUsersWithListInput",
                                    "Description": "Creates list of users with given input array\n\r\n",
                                    "ReturnType": "User",
                                    "ReturnTypeLink": "$m/User",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async createUsersWithListInput(\r\n  body?: User[],\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<User>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "body",
                                            "GenericName": "body",
                                            "DataType": "User[] | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/User",
                                            "Constant": false,
                                            "ParamType": "Body",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "Default",
                                            "Description": "successful operation",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "createUsersWithListInput",
                                        "Index": 3,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "body": [
                                                    {
                                                        "id": 10,
                                                        "username": "theUser",
                                                        "firstName": "John",
                                                        "lastName": "James",
                                                        "email": "john@email.com",
                                                        "password": "12345",
                                                        "phone": "12345",
                                                        "userStatus": 1
                                                    }
                                                ]
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "body": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "ModelSchemas#/Root/User"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/user/createWithList{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\",\"Content-Type\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"json\",\"data\":{% if call[\"args\"][\"body\"] != nil %}{{ call[\"args\"][\"body\"] | json: false }}{% else %}null{% endif %}}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'body' %}{% if variable %}{% capture import_params %}{{import_params}},User{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}{% if call[\"args\"][\"body\"] != nil %}const body: User[] = {% render 'user_array', field: call[\"args\"][\"body\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.createUsersWithListInput({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"body\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>body{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Create Users With List Input",
                            "SuggestedLink": "$e/user/createUsersWithListInput",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Login User",
                            "Nodes": [
                                {
                                    "Title": "Login User",
                                    "Name": "loginUser",
                                    "Description": "Logs user into the system\n\r\n",
                                    "ReturnType": "string",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async loginUser(\r\n  username?: string,\r\n  password?: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<string>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "username",
                                            "GenericName": "username",
                                            "DataType": "string | undefined",
                                            "Description": "The user name for login",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "password",
                                            "GenericName": "password",
                                            "DataType": "string | undefined",
                                            "Description": "The password for login in clear text",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid username/password supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "loginUser",
                                        "Index": 6,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {}
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "username": {
                                                            "description": "The user name for login",
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "description": "The password for login in clear text",
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/user/login{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"username\"] != nil %}&username={% if call[\"args\"][\"username\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"username\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% if call[\"args\"][\"password\"] != nil %}&password={% if call[\"args\"][\"password\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"password\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}{% if call[\"args\"][\"username\"] != nil %}const username = {% if call[\"args\"][\"username\"] != nil %}'{{ call[\"args\"][\"username\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"password\"] != nil %}const password = {% if call[\"args\"][\"password\"] != nil %}'{{ call[\"args\"][\"password\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.loginUser({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"username\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>username{% endcapture %}{% endif %}{% if call[\"args\"][\"password\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>password{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Login User",
                            "SuggestedLink": "$e/user/loginUser",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Get User by Name",
                            "Nodes": [
                                {
                                    "Title": "Get User by Name",
                                    "Name": "getUserByName",
                                    "Description": "Get user by user name\n\r\n",
                                    "ReturnType": "User",
                                    "ReturnTypeLink": "$m/User",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async getUserByName(\r\n  name: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<User>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "The name that needs to be fetched. Use user1 for testing.",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid username supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "User not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "getUserByName",
                                        "Index": 12,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "name": "name0"
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "The name that needs to be fetched. Use user1 for testing.",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/user/{{ call[\"args\"][\"name\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.getUserByName({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Get User by Name",
                            "SuggestedLink": "$e/user/getUserByName",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Create User",
                            "Nodes": [
                                {
                                    "Title": "Create User",
                                    "Name": "createUser",
                                    "Description": "This can only be done by the logged in user.\n\r\n",
                                    "ReturnType": "User",
                                    "ReturnTypeLink": "$m/User",
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async createUser(\r\n  id?: bigint,\r\n  username?: string,\r\n  firstName?: string,\r\n  lastName?: string,\r\n  email?: string,\r\n  password?: string,\r\n  phone?: string,\r\n  userStatus?: number,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<User>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "username",
                                            "GenericName": "username",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "firstName",
                                            "GenericName": "firstName",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "lastName",
                                            "GenericName": "lastName",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "email",
                                            "GenericName": "email",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "password",
                                            "GenericName": "password",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "phone",
                                            "GenericName": "phone",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "userStatus",
                                            "GenericName": "userStatus",
                                            "DataType": "number | undefined",
                                            "Description": "User Status",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "createUser",
                                        "Index": 15,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "id": 10,
                                                "username": "theUser",
                                                "firstName": "John",
                                                "lastName": "James",
                                                "email": "john@email.com",
                                                "password": "12345",
                                                "phone": "12345",
                                                "userStatus": 1
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "id": {
                                                            "example": 10,
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "username": {
                                                            "example": "theUser",
                                                            "type": "string"
                                                        },
                                                        "firstName": {
                                                            "example": "John",
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "example": "James",
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "example": "john@email.com",
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "example": "12345",
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "example": "12345",
                                                            "type": "string"
                                                        },
                                                        "userStatus": {
                                                            "description": "User Status",
                                                            "example": 1,
                                                            "type": "integer",
                                                            "format": "int32"
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/user{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"username\"] != nil %},[\"username\", {% if call[\"args\"][\"username\"] != nil %}{{ call[\"args\"][\"username\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"firstName\"] != nil %},[\"firstName\", {% if call[\"args\"][\"firstName\"] != nil %}{{ call[\"args\"][\"firstName\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"lastName\"] != nil %},[\"lastName\", {% if call[\"args\"][\"lastName\"] != nil %}{{ call[\"args\"][\"lastName\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"email\"] != nil %},[\"email\", {% if call[\"args\"][\"email\"] != nil %}{{ call[\"args\"][\"email\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"password\"] != nil %},[\"password\", {% if call[\"args\"][\"password\"] != nil %}{{ call[\"args\"][\"password\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"phone\"] != nil %},[\"phone\", {% if call[\"args\"][\"phone\"] != nil %}{{ call[\"args\"][\"phone\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"userStatus\"] != nil %},[\"userStatus\", {% if call[\"args\"][\"userStatus\"] != nil %}{{ call[\"args\"][\"userStatus\"] }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"username\"] != nil %}const username = {% if call[\"args\"][\"username\"] != nil %}'{{ call[\"args\"][\"username\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"firstName\"] != nil %}const firstName = {% if call[\"args\"][\"firstName\"] != nil %}'{{ call[\"args\"][\"firstName\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"lastName\"] != nil %}const lastName = {% if call[\"args\"][\"lastName\"] != nil %}'{{ call[\"args\"][\"lastName\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"email\"] != nil %}const email = {% if call[\"args\"][\"email\"] != nil %}'{{ call[\"args\"][\"email\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"password\"] != nil %}const password = {% if call[\"args\"][\"password\"] != nil %}'{{ call[\"args\"][\"password\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"phone\"] != nil %}const phone = {% if call[\"args\"][\"phone\"] != nil %}'{{ call[\"args\"][\"phone\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"userStatus\"] != nil %}const userStatus = {% if call[\"args\"][\"userStatus\"] != nil %}{{ call[\"args\"][\"userStatus\"] }}{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.createUser({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"username\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>username{% endcapture %}{% endif %}{% if call[\"args\"][\"firstName\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>firstName{% endcapture %}{% endif %}{% if call[\"args\"][\"lastName\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>lastName{% endcapture %}{% endif %}{% if call[\"args\"][\"email\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>email{% endcapture %}{% endif %}{% if call[\"args\"][\"password\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>password{% endcapture %}{% endif %}{% if call[\"args\"][\"phone\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>phone{% endcapture %}{% endif %}{% if call[\"args\"][\"userStatus\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>userStatus{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Create User",
                            "SuggestedLink": "$e/user/createUser",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Logout User",
                            "Nodes": [
                                {
                                    "Title": "Logout User",
                                    "Name": "logoutUser",
                                    "Description": "Logs out current logged in user session\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async logoutUser(\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "logoutUser",
                                        "Index": 16,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {}
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object"
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/user/logout{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.logoutUser({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Logout User",
                            "SuggestedLink": "$e/user/logoutUser",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Update User",
                            "Nodes": [
                                {
                                    "Title": "Update User",
                                    "Name": "updateUser",
                                    "Description": "This can only be done by the logged in user.\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async updateUser(\r\n  name: string,\r\n  id?: bigint,\r\n  username?: string,\r\n  firstName?: string,\r\n  lastName?: string,\r\n  email?: string,\r\n  password?: string,\r\n  phone?: string,\r\n  userStatus?: number,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "name that need to be deleted",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "username",
                                            "GenericName": "username",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "firstName",
                                            "GenericName": "firstName",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "lastName",
                                            "GenericName": "lastName",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "email",
                                            "GenericName": "email",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "password",
                                            "GenericName": "password",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "phone",
                                            "GenericName": "phone",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "userStatus",
                                            "GenericName": "userStatus",
                                            "DataType": "number | undefined",
                                            "Description": "User Status",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "updateUser",
                                        "Index": 17,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "name": "name0",
                                                "id": 10,
                                                "username": "theUser",
                                                "firstName": "John",
                                                "lastName": "James",
                                                "email": "john@email.com",
                                                "password": "12345",
                                                "phone": "12345",
                                                "userStatus": 1
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "name that need to be deleted",
                                                            "type": "string"
                                                        },
                                                        "id": {
                                                            "example": 10,
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "username": {
                                                            "example": "theUser",
                                                            "type": "string"
                                                        },
                                                        "firstName": {
                                                            "example": "John",
                                                            "type": "string"
                                                        },
                                                        "lastName": {
                                                            "example": "James",
                                                            "type": "string"
                                                        },
                                                        "email": {
                                                            "example": "john@email.com",
                                                            "type": "string"
                                                        },
                                                        "password": {
                                                            "example": "12345",
                                                            "type": "string"
                                                        },
                                                        "phone": {
                                                            "example": "12345",
                                                            "type": "string"
                                                        },
                                                        "userStatus": {
                                                            "description": "User Status",
                                                            "example": 1,
                                                            "type": "integer",
                                                            "format": "int32"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"PUT\",\"url\":\"https://petstore3.swagger.io/api/v3/user/{{ call[\"args\"][\"name\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"username\"] != nil %},[\"username\", {% if call[\"args\"][\"username\"] != nil %}{{ call[\"args\"][\"username\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"firstName\"] != nil %},[\"firstName\", {% if call[\"args\"][\"firstName\"] != nil %}{{ call[\"args\"][\"firstName\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"lastName\"] != nil %},[\"lastName\", {% if call[\"args\"][\"lastName\"] != nil %}{{ call[\"args\"][\"lastName\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"email\"] != nil %},[\"email\", {% if call[\"args\"][\"email\"] != nil %}{{ call[\"args\"][\"email\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"password\"] != nil %},[\"password\", {% if call[\"args\"][\"password\"] != nil %}{{ call[\"args\"][\"password\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"phone\"] != nil %},[\"phone\", {% if call[\"args\"][\"phone\"] != nil %}{{ call[\"args\"][\"phone\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"userStatus\"] != nil %},[\"userStatus\", {% if call[\"args\"][\"userStatus\"] != nil %}{{ call[\"args\"][\"userStatus\"] }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"username\"] != nil %}const username = {% if call[\"args\"][\"username\"] != nil %}'{{ call[\"args\"][\"username\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"firstName\"] != nil %}const firstName = {% if call[\"args\"][\"firstName\"] != nil %}'{{ call[\"args\"][\"firstName\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"lastName\"] != nil %}const lastName = {% if call[\"args\"][\"lastName\"] != nil %}'{{ call[\"args\"][\"lastName\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"email\"] != nil %}const email = {% if call[\"args\"][\"email\"] != nil %}'{{ call[\"args\"][\"email\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"password\"] != nil %}const password = {% if call[\"args\"][\"password\"] != nil %}'{{ call[\"args\"][\"password\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"phone\"] != nil %}const phone = {% if call[\"args\"][\"phone\"] != nil %}'{{ call[\"args\"][\"phone\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"userStatus\"] != nil %}const userStatus = {% if call[\"args\"][\"userStatus\"] != nil %}{{ call[\"args\"][\"userStatus\"] }}{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.updateUser({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"username\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>username{% endcapture %}{% endif %}{% if call[\"args\"][\"firstName\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>firstName{% endcapture %}{% endif %}{% if call[\"args\"][\"lastName\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>lastName{% endcapture %}{% endif %}{% if call[\"args\"][\"email\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>email{% endcapture %}{% endif %}{% if call[\"args\"][\"password\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>password{% endcapture %}{% endif %}{% if call[\"args\"][\"phone\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>phone{% endcapture %}{% endif %}{% if call[\"args\"][\"userStatus\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>userStatus{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Update User",
                            "SuggestedLink": "$e/user/updateUser",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Delete User",
                            "Nodes": [
                                {
                                    "Title": "Delete User",
                                    "Name": "deleteUser",
                                    "Description": "This can only be done by the logged in user.\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": null,
                                    "ResponseText": "",
                                    "ReturnTypeExample": null,
                                    "RequiresAuthentication": true,
                                    "MethodSignature": {
                                        "Text": "async deleteUser(\r\n  name: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "The name that needs to be deleted",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": null,
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": false,
                                            "LinkTo": null,
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": [],
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid username supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "User not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": null,
                                    "UsageExample": {
                                        "EndpointGroupName": "user",
                                        "EndpointName": "deleteUser",
                                        "Index": 18,
                                        "CallModel": {
                                            "additionalQueryParams": null,
                                            "additionalFieldParams": null,
                                            "args": {
                                                "name": "name0"
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": false,
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "description": "The name that needs to be deleted",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "name"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"DELETE\",\"url\":\"https://petstore3.swagger.io/api/v3/user/{{ call[\"args\"][\"name\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},UserController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst userController = new UserController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await userController.deleteUser({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": null,
                                    "ServerName": null,
                                    "Id": null,
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Delete User",
                            "SuggestedLink": "$e/user/deleteUser",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        }
                    ],
                    "PlaceholderId": null,
                    "SuggestedLinkText": "User",
                    "SuggestedLink": "$e/user",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": false,
                    "Type": "section"
                }
            ],
            "PlaceholderId": "__api_reference",
            "SuggestedLinkText": "API Reference",
            "SuggestedLink": "$h/__api_reference",
            "SuggestedLinkLevel": 1,
            "LinkLabel": null,
            "HideFromNavigation": false,
            "Type": "section"
        },
        {
            "Title": "Model Reference",
            "Nodes": [
                {
                    "Title": "Structures",
                    "Nodes": [
                        {
                            "Text": "* [Order]($m/Order)\n* [Customer]($m/Customer)\n* [Address]($m/Address)\n* [Category]($m/Category)\n* [User]($m/User)\n* [Tag]($m/Tag)\n* [Pet]($m/Pet)\n* [Pet Image]($m/PetImage)",
                            "Type": "paragraph"
                        },
                        {
                            "Title": "Order",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "quantity",
                                            "GenericName": "quantity",
                                            "DataType": "number | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "shipDate",
                                            "GenericName": "shipDate",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "StatusEnum | undefined",
                                            "Description": "Order Status",
                                            "Required": false,
                                            "LinkTo": "$m/Status",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "complete",
                                            "GenericName": "complete",
                                            "DataType": "boolean | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Order",
                                    "Name": "Order",
                                    "OriginalName": "Order",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Order",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"id\": 10,\r\n  \"petId\": 198772,\r\n  \"quantity\": 7,\r\n  \"status\": \"approved\",\r\n  \"shipDate\": \"2016-03-13T12:52:32.123Z\"\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Order",
                            "SuggestedLink": "$m/Order",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Customer",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "username",
                                            "GenericName": "username",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "address",
                                            "GenericName": "address",
                                            "DataType": "Address[] | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Address",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Customer",
                                    "Name": "Customer",
                                    "OriginalName": "Customer",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Customer",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"id\": 100000,\r\n  \"username\": \"fehguy\",\r\n  \"address\": [\r\n    {\r\n      \"street\": \"street4\",\r\n      \"city\": \"city4\",\r\n      \"state\": \"state0\",\r\n      \"zip\": \"zip8\"\r\n    }\r\n  ]\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Customer",
                            "SuggestedLink": "$m/Customer",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Address",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "street",
                                            "GenericName": "street",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "city",
                                            "GenericName": "city",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "state",
                                            "GenericName": "state",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "zip",
                                            "GenericName": "zip",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Address",
                                    "Name": "Address",
                                    "OriginalName": "Address",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Address",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"street\": \"437 Lytton\",\r\n  \"city\": \"Palo Alto\",\r\n  \"state\": \"CA\",\r\n  \"zip\": \"94301\"\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Address",
                            "SuggestedLink": "$m/Address",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Category",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Category",
                                    "Name": "Category",
                                    "OriginalName": "Category",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Category",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"id\": 1,\r\n  \"name\": \"Dogs\"\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Category",
                            "SuggestedLink": "$m/Category",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "User",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "username",
                                            "GenericName": "username",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "firstName",
                                            "GenericName": "firstName",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "lastName",
                                            "GenericName": "lastName",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "email",
                                            "GenericName": "email",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "password",
                                            "GenericName": "password",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "phone",
                                            "GenericName": "phone",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "userStatus",
                                            "GenericName": "userStatus",
                                            "DataType": "number | undefined",
                                            "Description": "User Status",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "User",
                                    "Name": "User",
                                    "OriginalName": "User",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/User",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"id\": 10,\r\n  \"username\": \"theUser\",\r\n  \"firstName\": \"John\",\r\n  \"lastName\": \"James\",\r\n  \"email\": \"john@email.com\",\r\n  \"password\": \"12345\",\r\n  \"phone\": \"12345\",\r\n  \"userStatus\": 1\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "User",
                            "SuggestedLink": "$m/User",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Tag",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Tag",
                                    "Name": "Tag",
                                    "OriginalName": "Tag",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Tag",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"id\": 112,\r\n  \"name\": \"name0\"\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Tag",
                            "SuggestedLink": "$m/Tag",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Pet",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "-",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "photoUrls",
                                            "GenericName": "photoUrls",
                                            "DataType": "string[]",
                                            "Description": "-",
                                            "Required": true,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "category",
                                            "GenericName": "category",
                                            "DataType": "Category | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Category",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "Tag[] | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "$m/Tag",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status1Enum | undefined",
                                            "Description": "pet status in the store",
                                            "Required": false,
                                            "LinkTo": "$m/Status1",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Pet",
                                    "Name": "Pet",
                                    "OriginalName": "Pet",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Pet",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"name\": \"doggie\",\r\n  \"photoUrls\": [\r\n    \"photoUrls5\",\r\n    \"photoUrls6\",\r\n    \"photoUrls7\"\r\n  ],\r\n  \"id\": 10,\r\n  \"category\": {\r\n    \"id\": 232,\r\n    \"name\": \"name2\"\r\n  },\r\n  \"tags\": [\r\n    {\r\n      \"id\": 239,\r\n      \"name\": \"name5\"\r\n    },\r\n    {\r\n      \"id\": 240,\r\n      \"name\": \"name6\"\r\n    }\r\n  ],\r\n  \"status\": \"sold\"\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Pet",
                            "SuggestedLink": "$m/Pet",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Pet Image",
                            "Nodes": [
                                {
                                    "Fields": [
                                        {
                                            "Name": "code",
                                            "GenericName": "code",
                                            "DataType": "number | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "type",
                                            "GenericName": "type",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "message",
                                            "GenericName": "message",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": false,
                                            "LinkTo": "",
                                            "Constant": false,
                                            "ParamType": null,
                                            "DataTypeMarkdown": null,
                                            "Discriminator": null,
                                            "DiscriminatorValue": null,
                                            "ReadOnly": false,
                                            "WriteOnly": false,
                                            "ContainerTypes": null,
                                            "TypeCombinatorTypes": null,
                                            "Getter": null,
                                            "Setter": null,
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "HasGetters": false,
                                    "HasSetters": false,
                                    "Title": "Pet Image",
                                    "Name": "PetImage",
                                    "OriginalName": "PetImage",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/PetImage",
                                    "StructureType": "Interface Name",
                                    "ContainedTypesName": "Fields",
                                    "Example": {
                                        "Text": "{\r\n  \"code\": 130,\r\n  \"type\": \"type0\",\r\n  \"message\": \"message0\"\r\n}",
                                        "Language": "json",
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "structurereference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Pet Image",
                            "SuggestedLink": "$m/PetImage",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        }
                    ],
                    "PlaceholderId": null,
                    "SuggestedLinkText": "Structures",
                    "SuggestedLink": "$h/__model_reference/Structures",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": false,
                    "Type": "section"
                },
                {
                    "Title": "Enumerations",
                    "Nodes": [
                        {
                            "Text": "* [Status 1]($m/Status1)\n* [Status 2]($m/status2)\n* [Status]($m/Status)",
                            "Type": "paragraph"
                        },
                        {
                            "Title": "Status 1",
                            "Nodes": [
                                {
                                    "Elements": [
                                        {
                                            "Key": "available",
                                            "Value": ""
                                        },
                                        {
                                            "Key": "pending",
                                            "Value": ""
                                        },
                                        {
                                            "Key": "sold",
                                            "Value": ""
                                        }
                                    ],
                                    "Title": "Status 1",
                                    "Name": "Status1Enum",
                                    "OriginalName": "Status1",
                                    "Description": "pet status in the store",
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Status1",
                                    "StructureType": "Enum Type Name",
                                    "ContainedTypesName": "Enum Members",
                                    "Example": null,
                                    "Id": null,
                                    "Type": "enumreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Status 1",
                            "SuggestedLink": "$m/Status1",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Status 2",
                            "Nodes": [
                                {
                                    "Elements": [
                                        {
                                            "Key": "available",
                                            "Value": ""
                                        },
                                        {
                                            "Key": "pending",
                                            "Value": ""
                                        },
                                        {
                                            "Key": "sold",
                                            "Value": ""
                                        }
                                    ],
                                    "Title": "Status 2",
                                    "Name": "Status2Enum",
                                    "OriginalName": "status2",
                                    "Description": null,
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/status2",
                                    "StructureType": "Enum Type Name",
                                    "ContainedTypesName": "Enum Members",
                                    "Example": null,
                                    "Id": null,
                                    "Type": "enumreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Status 2",
                            "SuggestedLink": "$m/status2",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        },
                        {
                            "Title": "Status",
                            "Nodes": [
                                {
                                    "Elements": [
                                        {
                                            "Key": "placed",
                                            "Value": ""
                                        },
                                        {
                                            "Key": "approved",
                                            "Value": ""
                                        },
                                        {
                                            "Key": "delivered",
                                            "Value": ""
                                        }
                                    ],
                                    "Title": "Status",
                                    "Name": "StatusEnum",
                                    "OriginalName": "Status",
                                    "Description": "Order Status",
                                    "BaseClass": null,
                                    "BaseClassLink": null,
                                    "ChildClassesLink": null,
                                    "LinkTo": "$m/Status",
                                    "StructureType": "Enum Type Name",
                                    "ContainedTypesName": "Enum Members",
                                    "Example": {
                                        "Text": "approved",
                                        "Language": null,
                                        "Type": "codeblock"
                                    },
                                    "Id": null,
                                    "Type": "enumreference"
                                }
                            ],
                            "PlaceholderId": null,
                            "SuggestedLinkText": "Status",
                            "SuggestedLink": "$m/Status",
                            "SuggestedLinkLevel": 3,
                            "LinkLabel": null,
                            "HideFromNavigation": false,
                            "Type": "section"
                        }
                    ],
                    "PlaceholderId": null,
                    "SuggestedLinkText": "Enumerations",
                    "SuggestedLink": "$h/__model_reference/Enumerations",
                    "SuggestedLinkLevel": 2,
                    "LinkLabel": null,
                    "HideFromNavigation": false,
                    "Type": "section"
                }
            ],
            "PlaceholderId": "__model_reference",
            "SuggestedLinkText": "Model Reference",
            "SuggestedLink": "$h/__model_reference",
            "SuggestedLinkLevel": 1,
            "LinkLabel": null,
            "HideFromNavigation": false,
            "Type": "section"
        }
    ],
    "Type": "document"
}