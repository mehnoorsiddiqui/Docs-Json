{
    "Title": "Getting Started with Swagger Petstore - OpenAPI 3.0",
    "Sections": [
        {
            "Title": "API Reference",
            "Nodes": [
                {
                    "Title": "List of APIs",
                    "Nodes": [
                        {
                            "Text": "* [Pet]($e/pet)\n* [Store]($e/store)\n* [User]($e/user)",
                            "Type": "paragraph"
                        }
                    ]
                },
                {
                    "Title": "Pet",
                    "Nodes": [
                        {
                            "Title": "Overview",
                            "Nodes": [
                                {
                                    "Text": "Everything about your Pets",
                                    "Type": "paragraph"
                                },
                                {
                                    "Text": "Find out more: [http://swagger.io](http://swagger.io)",
                                    "Type": "paragraph"
                                }
                            ]
                        },
                        {
                            "Title": "Add Pet",
                            "Nodes": [
                                {
                                    "Title": "Add Pet",
                                    "Name": "addPet",
                                    "Description": "Add a new pet to the store\n\r\n",
                                    "ReturnType": "Pet",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async addPet(\r\n  name: string,\r\n  photoUrls: string[],\r\n  id?: bigint,\r\n  category?: Category,\r\n  tags?: Tag[],\r\n  status?: Status1Enum,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "-",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "photoUrls",
                                            "GenericName": "photoUrls",
                                            "DataType": "string[]",
                                            "Description": "-",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "category",
                                            "GenericName": "category",
                                            "DataType": "Category | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "$m/Category",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "Tag[] | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "$m/Tag",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status1Enum | undefined",
                                            "Description": "pet status in the store",
                                            "Required": "false",
                                            "LinkTo": "$m/Status1",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Invalid input",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "addPet",
                                        "Index": 0,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "name": "doggie",
                                                "photoUrls": [
                                                    "photoUrls5",
                                                    "photoUrls6",
                                                    "photoUrls7"
                                                ],
                                                "id": "10",
                                                "category": {
                                                    "id": "1",
                                                    "name": "Dogs"
                                                },
                                                "tags": [
                                                    {}
                                                ]
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "example": "doggie",
                                                            "type": "string"
                                                        },
                                                        "photoUrls": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "id": {
                                                            "example": "10",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "category": {
                                                            "$ref": "ModelSchemas#/Root/Category"
                                                        },
                                                        "tags": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "ModelSchemas#/Root/Tag"
                                                            }
                                                        },
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/Status1"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "photoUrls"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/pet{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %},[\"name\", {% if call[\"args\"][\"name\"] != nil %}{{ call[\"args\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% for this in call[\"args\"][\"photoUrls\"] %},[\"photoUrls[{{ forloop.index0 }}]\", {% if this != nil %}{{ this | json: false }}{% else %}null{% endif %}]{% endfor %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% if call[\"args\"][\"category\"][\"id\"] != nil %},[\"category[id]\", {% if call[\"args\"][\"category\"][\"id\"] != nil %}{{ call[\"args\"][\"category\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"][\"name\"] != nil %},[\"category[name]\", {% if call[\"args\"][\"category\"][\"name\"] != nil %}{{ call[\"args\"][\"category\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% for this in call[\"args\"][\"tags\"] %}{% assign a0 = forloop.index0 %}{% if this[\"id\"] != nil %},[\"tags[{{ a0 }}][id]\", {% if this[\"id\"] != nil %}{{ this[\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if this[\"name\"] != nil %},[\"tags[{{ a0 }}][name]\", {% if this[\"name\"] != nil %}{{ this[\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endfor %}{% endif %}{% if call[\"args\"][\"status\"] != nil %},[\"status\", {% if call[\"args\"][\"status\"] != nil %}{{ call[\"args\"][\"status\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'category' %}{% if variable %}{% capture import_params %}{{import_params}},Category{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},Status1Enum{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'tags' %}{% if variable %}{% capture import_params %}{{import_params}},Tag{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}const photoUrls: string[] = {% render 'string_array', field: call[\"args\"][\"photoUrls\"], indent: '', showFullCode: showFullCode %};\n\n{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"category\"] != nil %}const category: Category = {% render 'category', field: call[\"args\"][\"category\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"tags\"] != nil %}const tags: Tag[] = {% render 'tag_array', field: call[\"args\"][\"tags\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'available' %}Status1Enum.Available{% when 'pending' %}Status1Enum.Pending{% when 'sold' %}Status1Enum.Sold{% else %}envrr{% endcase %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.addPet({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name<#>photoUrls{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>category{% endcapture %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>tags{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Add Pet",
                            "SuggestedLink": "$e/pet/addPet",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Find Pets by Tags",
                            "Nodes": [
                                {
                                    "Title": "Find Pets by Tags",
                                    "Name": "findPetsByTags",
                                    "Description": "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.\n\r\n",
                                    "ReturnType": "Pet[]",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async findPetsByTags(\r\n  tags?: string[],\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet[]>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "string[] | undefined",
                                            "Description": "Tags to filter by",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid tag value",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "findPetsByTags",
                                        "Index": "1",
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {}
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "tags": {
                                                            "description": "Tags to filter by",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/findByTags{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"tags\"] != nil %}{% for this in call[\"args\"][\"tags\"] %}&tags[{{ forloop.index0 }}]={% if this != nil %}{% capture json_strip_quote_237984 %}{{ this | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endfor %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"tags\"] != nil %}const tags: string[] = {% render 'string_array', field: call[\"args\"][\"tags\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.findPetsByTags({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"tags\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>tags{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Find Pets by Tags",
                            "SuggestedLink": "$e/pet/findPetsByTags",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Update Pet With Form",
                            "Nodes": [
                                {
                                    "Title": "Update Pet With Form",
                                    "Name": "updatePetWithForm",
                                    "Description": "Updates a pet in the store with form data\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": "null",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async updatePetWithForm(\r\n  petId: bigint,\r\n  name?: string,\r\n  status?: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "ID of pet that needs to be updated",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string | undefined",
                                            "Description": "Name of pet that needs to be updated",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "string | undefined",
                                            "Description": "Status of pet that needs to be updated",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Invalid input",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "updatePetWithForm",
                                        "Index": 4,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "ID of pet that needs to be updated",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "name": {
                                                            "description": "Name of pet that needs to be updated",
                                                            "type": "string"
                                                        },
                                                        "status": {
                                                            "description": "Status of pet that needs to be updated",
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"name\"] != nil %}&name={% if call[\"args\"][\"name\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"name\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}&status={% if call[\"args\"][\"status\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"status\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% if call[\"args\"][\"status\"] != nil %}'{{ call[\"args\"][\"status\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.updatePetWithForm({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% if call[\"args\"][\"name\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>name{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Update Pet With Form",
                            "SuggestedLink": "$e/pet/updatePetWithForm",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Find Pets by Status",
                            "Nodes": [
                                {
                                    "Title": "Find Pets by Status",
                                    "Name": "findPetsByStatus",
                                    "Description": "Multiple status values can be provided with comma separated strings\n\r\n",
                                    "ReturnType": "Pet[]",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async findPetsByStatus(\r\n  status?: Status2Enum,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet[]>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status2Enum | undefined",
                                            "Description": "Status values that need to be considered for filter<br>**Default**: `Status2Enum.Available`",
                                            "Required": "false",
                                            "LinkTo": "$m/status2",
                                            "Constant": "false",
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid status value",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "findPetsByStatus",
                                        "Index": 7,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "status": "available"
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/status2"
                                                        }
                                                    }
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/findByStatus{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"status\"] != nil %}&status={% if call[\"args\"][\"status\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"status\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},Status2Enum{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'available' %}Status2Enum.Available{% when 'pending' %}Status2Enum.Pending{% when 'sold' %}Status2Enum.Sold{% else %}envrr{% endcase %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.findPetsByStatus({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}{% endcapture %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Find Pets by Status",
                            "SuggestedLink": "$e/pet/findPetsByStatus",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Update Pet",
                            "Nodes": [
                                {
                                    "Title": "Update Pet",
                                    "Name": "updatePet",
                                    "Description": "Update an existing pet by Id\n\r\n",
                                    "ReturnType": "Pet",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async updatePet(\r\n  name: string,\r\n  photoUrls: string[],\r\n  id?: bigint,\r\n  category?: Category,\r\n  tags?: Tag[],\r\n  status?: Status1Enum,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "name",
                                            "GenericName": "name",
                                            "DataType": "string",
                                            "Description": "-",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "photoUrls",
                                            "GenericName": "photoUrls",
                                            "DataType": "string[]",
                                            "Description": "-",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "id",
                                            "GenericName": "id",
                                            "DataType": "bigint | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "category",
                                            "GenericName": "category",
                                            "DataType": "Category | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "$m/Category",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "tags",
                                            "GenericName": "tags",
                                            "DataType": "Tag[] | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "$m/Tag",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "status",
                                            "GenericName": "status",
                                            "DataType": "Status1Enum | undefined",
                                            "Description": "pet status in the store",
                                            "Required": "false",
                                            "LinkTo": "$m/Status1",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid ID supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "Pet not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "405",
                                            "Description": "Validation exception",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "updatePet",
                                        "Index": 8,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "name": "doggie",
                                                "photoUrls": [
                                                    "photoUrls5",
                                                    "photoUrls6",
                                                    "photoUrls7"
                                                ],
                                                "id": "10",
                                                "category": {
                                                    "id": "1",
                                                    "name": "Dogs"
                                                },
                                                "tags": [
                                                    {}
                                                ]
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "name": {
                                                            "example": "doggie",
                                                            "type": "string"
                                                        },
                                                        "photoUrls": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "id": {
                                                            "example": "10",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "category": {
                                                            "$ref": "ModelSchemas#/Root/Category"
                                                        },
                                                        "tags": {
                                                            "description": "",
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "ModelSchemas#/Root/Tag"
                                                            }
                                                        },
                                                        "status": {
                                                            "$ref": "ModelSchemas#/Root/Status1"
                                                        }
                                                    },
                                                    "required": [
                                                        "name",
                                                        "photoUrls"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"PUT\",\"url\":\"https://petstore3.swagger.io/api/v3/pet{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"form\",\"data\":[{% capture form_capture_238764 %},[\"name\", {% if call[\"args\"][\"name\"] != nil %}{{ call[\"args\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% for this in call[\"args\"][\"photoUrls\"] %},[\"photoUrls[{{ forloop.index0 }}]\", {% if this != nil %}{{ this | json: false }}{% else %}null{% endif %}]{% endfor %}{% if call[\"args\"][\"id\"] != nil %},[\"id\", {% if call[\"args\"][\"id\"] != nil %}{{ call[\"args\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% if call[\"args\"][\"category\"][\"id\"] != nil %},[\"category[id]\", {% if call[\"args\"][\"category\"][\"id\"] != nil %}{{ call[\"args\"][\"category\"][\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if call[\"args\"][\"category\"][\"name\"] != nil %},[\"category[name]\", {% if call[\"args\"][\"category\"][\"name\"] != nil %}{{ call[\"args\"][\"category\"][\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% for this in call[\"args\"][\"tags\"] %}{% assign a0 = forloop.index0 %}{% if this[\"id\"] != nil %},[\"tags[{{ a0 }}][id]\", {% if this[\"id\"] != nil %}{{ this[\"id\"] }}{% else %}null{% endif %}]{% endif %}{% if this[\"name\"] != nil %},[\"tags[{{ a0 }}][name]\", {% if this[\"name\"] != nil %}{{ this[\"name\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endfor %}{% endif %}{% if call[\"args\"][\"status\"] != nil %},[\"status\", {% if call[\"args\"][\"status\"] != nil %}{{ call[\"args\"][\"status\"] | json: false }}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'category' %}{% if variable %}{% capture import_params %}{{import_params}},Category{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'status' %}{% if variable %}{% capture import_params %}{{import_params}},Status1Enum{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'tags' %}{% if variable %}{% capture import_params %}{{import_params}},Tag{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"name\"] != nil %}const name = {% if call[\"args\"][\"name\"] != nil %}'{{ call[\"args\"][\"name\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% else %}const name = '';\n\n{% endif %}const photoUrls: string[] = {% render 'string_array', field: call[\"args\"][\"photoUrls\"], indent: '', showFullCode: showFullCode %};\n\n{% if call[\"args\"][\"id\"] != nil %}const id = BigInt({% if call[\"args\"][\"id\"] != nil %}{% if call[\"args\"][\"id\"] <= 999999999999999 %}{{ call[\"args\"][\"id\"] }}{% else %}'{{ call[\"args\"][\"id\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% endif %}{% if call[\"args\"][\"category\"] != nil %}const category: Category = {% render 'category', field: call[\"args\"][\"category\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"tags\"] != nil %}const tags: Tag[] = {% render 'tag_array', field: call[\"args\"][\"tags\"], indent: '', showFullCode: showFullCode %};\n\n{% endif %}{% if call[\"args\"][\"status\"] != nil %}const status = {% case call[\"args\"][\"status\"] %}{% when 'available' %}Status1Enum.Available{% when 'pending' %}Status1Enum.Pending{% when 'sold' %}Status1Enum.Sold{% else %}envrr{% endcase %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.updatePet({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}name<#>photoUrls{% endcapture %}{% if call[\"args\"][\"id\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>id{% endcapture %}{% endif %}{% if call[\"args\"][\"category\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>category{% endcapture %}{% endif %}{% if call[\"args\"][\"tags\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>tags{% endcapture %}{% endif %}{% if call[\"args\"][\"status\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>status{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Update Pet",
                            "SuggestedLink": "$e/pet/updatePet",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Upload File",
                            "Nodes": [
                                {
                                    "Title": "Upload File",
                                    "Name": "uploadFile",
                                    "Description": "uploads an image\n\r\n",
                                    "ReturnType": "PetImage",
                                    "ReturnTypeLink": "$m/PetImage",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async uploadFile(\r\n  petId: bigint,\r\n  additionalMetadata?: string,\r\n  body?: FileWrapper,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<PetImage>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "ID of pet to update",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "additionalMetadata",
                                            "GenericName": "additionalMetadata",
                                            "DataType": "string | undefined",
                                            "Description": "Additional Metadata",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Query",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "body",
                                            "GenericName": "body",
                                            "DataType": "FileWrapper | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Form",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": "[]",
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "uploadFile",
                                        "Index": 9,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "ID of pet to update",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "additionalMetadata": {
                                                            "description": "Additional Metadata",
                                                            "type": "string"
                                                        },
                                                        "body": {
                                                            "type": "string",
                                                            "format": "data-url"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"POST\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}/uploadImage{% capture inline_query_capture_876234 %}{% if call[\"args\"][\"additionalMetadata\"] != nil %}&additionalMetadata={% if call[\"args\"][\"additionalMetadata\"] != nil %}{% capture json_strip_quote_237984 %}{{ call[\"args\"][\"additionalMetadata\"] | url_encode | json: false }}{% endcapture %}{% assign json_strip_size_9870234 = json_strip_quote_237984 | size | minus: 2 %}{{ json_strip_quote_237984 | slice: 1, json_strip_size_9870234 }}{% else %}null{% endif %}{% endif %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"multipart\",\"data\":[{% capture form_capture_238764 %}{% endcapture %}{{ form_capture_238764 | remove_first:',' }}],\"files\":[{% capture files_capture_89065 %}{% if call[\"args\"][\"body\"] != nil %},[\"body\", {% if call[\"args\"][\"body\"] != nil %}{% if call[\"args\"][\"body\"] != nil %}{{ call[\"args\"][\"body\"] | json: false }}{% else %}null{% endif %}{% else %}null{% endif %}]{% endif %}{% endcapture %}{{ files_capture_89065 | remove_first:',' }}]}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = call[\"args\"] | any:'body' %}{% if variable %}{% capture import_params %}{{import_params}},FileWrapper{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}{% if call[\"args\"][\"additionalMetadata\"] != nil %}const additionalMetadata = {% if call[\"args\"][\"additionalMetadata\"] != nil %}'{{ call[\"args\"][\"additionalMetadata\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}{% if call[\"args\"][\"body\"] != nil %}const body = new FileWrapper(fs.createReadStream({% if call[\"args\"][\"body\"] != nil %}'{{ call[\"args\"][\"body\"] | get_file_from_data_url | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}));\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.uploadFile({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% if call[\"args\"][\"additionalMetadata\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>additionalMetadata{% endcapture %}{% endif %}{% if call[\"args\"][\"body\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>body{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Upload File",
                            "SuggestedLink": "$e/pet/uploadFile",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Get Pet by Id",
                            "Nodes": [
                                {
                                    "Title": "Get Pet by Id",
                                    "Name": "getPetById",
                                    "Description": "Returns a single pet\n\r\n",
                                    "ReturnType": "Pet",
                                    "ReturnTypeLink": "$m/Pet",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async getPetById(\r\n  petId: bigint,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<Pet>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "ID of pet to return",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid ID supplied",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        },
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "404",
                                            "Description": "Pet not found",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "getPetById",
                                        "Index": 13,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "ID of pet to return",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"GET\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }},\"Accept\":\"application/json\"{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.getPetById({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Get Pet by Id",
                            "SuggestedLink": "$e/pet/getPetById",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        },
                        {
                            "Title": "Delete Pet",
                            "Nodes": [
                                {
                                    "Title": "Delete Pet",
                                    "Name": "deletePet",
                                    "Description": "delete a pet\n\r\n",
                                    "ReturnType": "void",
                                    "ReturnTypeLink": "null",
                                    "ResponseText": "",
                                    "ReturnTypeExample": "null",
                                    "RequiresAuthentication": "true",
                                    "MethodSignature": {
                                        "Text": "async deletePet(\r\n  petId: bigint,\r\n  apiKey?: string,\r\n  requestOptions?: RequestOptions\r\n): Promise<ApiResponse<void>>",
                                        "Language": "ts",
                                        "Type": "codeblock"
                                    },
                                    "Parameters": [
                                        {
                                            "Name": "petId",
                                            "GenericName": "petId",
                                            "DataType": "bigint",
                                            "Description": "Pet id to delete",
                                            "Required": "true",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Template",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "apiKey",
                                            "GenericName": "api_key",
                                            "DataType": "string | undefined",
                                            "Description": "-",
                                            "Required": "false",
                                            "LinkTo": "",
                                            "Constant": "false",
                                            "ParamType": "Header",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        },
                                        {
                                            "Name": "requestOptions",
                                            "GenericName": "null",
                                            "DataType": "RequestOptions | undefined",
                                            "Description": "Pass additional request options.",
                                            "Required": "false",
                                            "LinkTo": "null",
                                            "Constant": "false",
                                            "ParamType": "null",
                                            "DataTypeMarkdown": "null",
                                            "Discriminator": "null",
                                            "DiscriminatorValue": "null",
                                            "ReadOnly": "false",
                                            "WriteOnly": "false",
                                            "ContainerTypes": "null",
                                            "TypeCombinatorTypes": "null",
                                            "Getter": "null",
                                            "Setter": "null",
                                            "Type": "paraminfo"
                                        }
                                    ],
                                    "Scopes": "[]",
                                    "Errors": [
                                        {
                                            "Name": "ApiError",
                                            "StatusCode": "400",
                                            "Description": "Invalid pet value",
                                            "LinkTo": "",
                                            "Type": "errorinfo"
                                        }
                                    ],
                                    "StaticUsageExample": "null",
                                    "UsageExample": {
                                        "EndpointGroupName": "pet",
                                        "EndpointName": "deletePet",
                                        "Index": 14,
                                        "CallModel": {
                                            "additionalQueryParams": "null",
                                            "additionalFieldParams": "null",
                                            "args": {
                                                "petId": 152
                                            }
                                        },
                                        "CallModelSchema": {
                                            "title": "Endpoint Arguments",
                                            "type": "object",
                                            "additionalProperties": "false",
                                            "properties": {
                                                "args": {
                                                    "id": "endpoint_7C26ABBCDB1F9",
                                                    "title": "endpoint_7C26ABBCDB1F9",
                                                    "type": "object",
                                                    "properties": {
                                                        "petId": {
                                                            "description": "Pet id to delete",
                                                            "type": "integer",
                                                            "format": "int64"
                                                        },
                                                        "api_key": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "required": [
                                                        "petId"
                                                    ]
                                                }
                                            },
                                            "required": [
                                                "args"
                                            ]
                                        },
                                        "HttpCallTemplate": "{\"method\":\"DELETE\",\"url\":\"https://petstore3.swagger.io/api/v3/pet/{{ call[\"args\"][\"petId\"] }}{% capture inline_query_capture_876234 %}{% endcapture %}{% if inline_query_capture_876234.size > 0 %}?{% endif %}{{ inline_query_capture_876234 | remove_first:'&' }}\",\"headers\":{% capture header_capture_9023987234 %},\"api_key\":{{ config[\"api_key\"] | json: false }}{% if call[\"args\"][\"api_key\"] != nil %},\"api_key\":{{ call[\"args\"][\"api_key\"] | json: false }}{% endif %}{% endcapture %}{{ '{' }}{{ header_capture_9023987234 | remove_first:',' }}},\"body\":{{ '{' }}\"type\":\"none\"}}",
                                        "Templates": {
                                            "TS_GENERIC_LIB": "{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}{% capture import_params %}{% endcapture %}{% capture import_statement %}{% endcapture %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},ApiError{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},Client{% endcapture %}{% endif %}{% assign variable = true %}{% if variable %}{% capture import_params %}{{import_params}},PetController{% endcapture %}{% endif %}{% assign import_param_array = import_params | split: ',' %}{% capture import_statement %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }} {% endif %}{{this}}{% if forloop.last %} {{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %}, {% endif %}{% endif %}{% endfor %}{% endcapture %}{% if import_param_array contains 'FileWrapper' %}import fs from 'fs';\n{% endif %}{% if import_statement.size < 81 %}{{ import_statement }}{% else %}{% for this in import_param_array %}{% if this != nil and this != '' %}{% if forloop.index0 == 1 %}import {{ open_curly }}{% endif %}\n  {{this}}{% if forloop.last %},\n{{ close_curly }} from 'swagger-petstore-openapi-3-0-lib';\n{% else %},{% endif %}{% endif %}{% endfor %}{% endif %}\n{% endif %}{% if showFullCode %}{% assign open_curly = '{' %}{% assign close_curly = '}' %}const client = new Client({{ open_curly }}{% capture client_params %}{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  timeout: 0{% endcapture %}{% capture client_params %}{{client_params}}<#>\n  apiKey: {% if config[\"api_key\"] != nil %}'{{ config[\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %}{% endcapture %}{% assign client_param_array = client_params | split: '<#>' %}{% for this in client_param_array %}{% if this != nil and this != '' %}{{this}},{% endif %}{% endfor %}\r\n{{ close_curly }});\n\r\nconst petController = new PetController(client);\n\r\n{% endif %}{% if call[\"args\"][\"petId\"] != nil %}const petId = BigInt({% if call[\"args\"][\"petId\"] != nil %}{% if call[\"args\"][\"petId\"] <= 999999999999999 %}{{ call[\"args\"][\"petId\"] }}{% else %}'{{ call[\"args\"][\"petId\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% endif %}{% else %}null{% endif %});\n\n{% else %}const petId = 0n;\n\n{% endif %}{% if call[\"args\"][\"api_key\"] != nil %}const apiKey = {% if call[\"args\"][\"api_key\"] != nil %}'{{ call[\"args\"][\"api_key\"] | replace: \"\\\\\", \"\\\\\" | replace: \"'\", \"\\'\" | replace: \"\\n\", \"\\n\" }}'{% else %}null{% endif %};\n\n{% endif %}try {\r\n  const { result, ...httpResponse } = await petController.deletePet({% capture endpoint_params %}{% endcapture %}{% capture endpoint_params %}petId{% endcapture %}{% if call[\"args\"][\"api_key\"] != nil %}{% capture endpoint_params %}{{endpoint_params}}<#>apiKey{% endcapture %}{% endif %}{% assign endpoint_param_array = endpoint_params | split: '<#>' %}{% for this in endpoint_param_array %}{% if this != nil and this != '' %}{% if forloop.length > 1 %}\n    {% endif %}{{this}}{% if forloop.last %}{% if forloop.length > 1 %}\n  {% endif %}{% else %},{% endif %}{% endif %}{% endfor %});\n  // Get more response info...\n  // const { statusCode, headers } = httpResponse;\n} catch (error) {\n  if (error instanceof ApiError) {\n    const errors = error.result;\n    // const { statusCode, headers } = error;\n  }\n}\r\n"
                                        },
                                        "Type": "compilablecodeblock"
                                    },
                                    "Response": "null",
                                    "ServerName": "null",
                                    "Id": "null",
                                    "Type": "endpointreference"
                                }
                            ],
                            "PlaceholderId": "null",
                            "SuggestedLinkText": "Delete Pet",
                            "SuggestedLink": "$e/pet/deletePet",
                            "SuggestedLinkLevel": "3",
                            "LinkLabel": "null",
                            "HideFromNavigation": "false",
                            "Type": "section"
                        }
                    ],
                    "PlaceholderId": "null",
                    "SuggestedLinkText": "Pet",
                    "SuggestedLink": "$e/pet",
                    "SuggestedLinkLevel": "2",
                    "LinkLabel": "null",
                    "HideFromNavigation": "false",
                    "Type": "section"
                }
            ],
            "PlaceholderId": "__api_reference",
            "SuggestedLinkText": "API Reference",
            "SuggestedLink": "$h/__api_reference",
            "SuggestedLinkLevel": "1",
            "LinkLabel": "null",
            "HideFromNavigation": "false",
            "Type": "section"
        }
    ],
    "Type": "document"
}